
var express = require('express'),
  bodyParser = require('body-parser'),
  cookieParser = require('cookie-parser'),
  session = require('express-session')

var config = require('./config')
var flows = {
  1: require('./oauth1'),
  2: require('./oauth2'),
  getpocket: require('./getpocket')
}


function Grant (_config) {
  var app = express()
  app.use(bodyParser.json())
  app.use(bodyParser.urlencoded({extended: true}))
  app.use(cookieParser())
  app.use(session({
      name: 'grant', secret: 'very secret',
      saveUninitialized: true, resave: true
    }))

  app.config = config.init(_config)

  app.get('/connect/:provider/:override?', function (req, res, next) {
    if (req.params.override == 'callback') return next()

    req.session.grant = {
      provider:req.params.provider,
      override:req.params.override
    }

    connect(req, res)
  })

  app.post('/connect/:provider/:override?', function (req, res) {
    req.session.grant = {
      provider:req.params.provider,
      override:req.params.override,
      dynamic:req.body
    }

    connect(req, res)
  })

  function connect (req, res) {
    var grant = req.session.grant
    var provider = config.provider(app.config, grant)
    var flow = flows[provider.oauth]

    if (provider.oauth == 1) {
      flow.step1(provider, function (err, data) {
        if (err) return res.redirect(provider.callback + '?' + err)
        grant.step1 = data
        var url = flow.step2(provider, data)
        res.redirect(url)
      })
    }

    else if (provider.oauth == 2) {
      grant.state = provider.state
      var url = flow.step1(provider)
      res.redirect(url)
    }

    else if (provider.custom) {
      flow = flows[provider.name]
      flow.step1(provider, function (err, data) {
        if (err) return res.redirect(provider.callback + '?' + err)
        grant.step1 = data;
        var url = flow.step2(provider, data)
        res.redirect(url)
      });
    }
  }

  app.get('/connect/:provider/callback', function (req, res) {
    var grant = req.session.grant
    var provider = config.provider(app.config, grant)
    var flow = flows[provider.oauth]


    if (provider.oauth == 1) {
      flow.step3(provider, grant.step1, req.query, function (err, url) {
        if (err) return res.redirect(provider.callback + '?' + err)
        res.redirect(url)
      })
    }

    else if (provider.oauth == 2) {
      flow.step2(provider, req.query, grant, function (err, data) {
        if (err) return res.redirect(provider.callback + '?' + err)
        console.log( '=======================================' );
        console.log( provider.name );
        // console.log( 'DATA: ' + data );
        console.log( '=======================================' );

        switch( provider.name ){
          case "facebook":
              var facebook = require('fb');
              var pegaToken = data.split( '&' );
              var pegaToken2 = pegaToken[0].split( '=' );

              var token = pegaToken2[1];
              console.log( 'TOKEN: ' + token );
              console.log( '=======================================' );

              facebook.setAccessToken(token);
              facebook.api('me', function(profile) {
                  if (!profile || profile.error) {
                      console.log(!profile ? 'error occurred' : profile.error);
                      return;
                  }
                  //Guarda os dados do usuário na sessão
                  var customData = {
                    "displayName" : profile.name,
                    "id" : profile.id,
                    "name" : {
                      "first" : profile.first_name,
                      "last" : profile.last_name
                    },
                    "email" : profile.email,
                    "token" : token
                  };

                  console.log( customData );
                  console.log( '=======================================' );

                  var url = flow.step3(provider, customData )
                  res.redirect(url);
              });

              break;

            /*case "google":
              var http = require( 'http' );
              var url = 'https://www.googleapis.com/plus/v1/people/userId?access_token=';
              var pegaToken = data.split( '&' );
              var pegaToken2 = pegaToken[0].split( '=' );

              var token = pegaToken2[1];

              http.get( url + token, function(res){
                  var body = '';

                  res.on('data', function(chunk) {
                      body += chunk;
                  });

                  res.on('end', function() {
                      console.log( "BODY: " + body );

                      var url = flow.step3(provider, customData )
                      res.redirect(url);
                  });
              });
              break;*/
        };
      })
    }

    else if (provider.custom) {
      flow = flows[provider.name]
      flow.step3(provider, grant.step1, function (err, url) {
        if (err) return res.redirect(provider.callback + '?' + err)
        res.redirect(url)
      })
    }
  })

  return app
}

exports = module.exports = Grant
